[{"categories":["programming"],"contents":"UIView.Animation アニメーション中にブザーを鳴らしたい・・・\nAudioKitを使う。\nanimationの中に書いてもダメ\n結局\nDispatch +0.01s とかにした。スレッドなるものがあるらしい。 同じスレッドで処理されると、アニメーションが終わってから別の処理を呼ぶ（=アニメーション中に再生できない） のであえて別のスレッドにおいて非同期処理する。\nできた。\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-21/","tags":["swift"],"title":"Swiftでアニメーション"},{"categories":null,"contents":"参考記事 2018年の機械学種\n[上記より引用]\nNLP   ACL 最上位国際会議。3年周期。Student Research Workshopがある。\n  NAACL（なっくる） 北米でのACL系。英語や翻訳といったテーマが強いらしい。\n  EMNLP\n  CoNLL(こぬる) Shared Task？学習系手法がメイン。\n  COLING（こりんぐ） 2年ごと。abstractに第二言語を入れて対訳コーパスを作ろうとしていたらしい。\n  EACL ヨーロッパでのACL系。\n  IJCNLP アジア系。２年ごと。\n  AACL アジアでのACL系。\n  LREC（エルレック） 言語リソース系。言語資源の研究が他の研究を支えている。２年ごと。\n  この辺に通している人はすごい人。\nCV, CG, 画像処理  SIGGRAPH WWW CVPR ICCV  その他情報系  SIGMOD VLDB VLDB Journal* TODS ICDE KDD TOIS* JAIR*  Machine Learning  JMLR*   AI  IJCAI AI*  ","permalink":"https://stardust-coder.github.io/apblog/blog/post-22/","tags":["nlp"],"title":"国際会議まとめwikiをつくりたい"},{"categories":["programming"],"contents":"KUSUGURI: A Shared Tactile Interface for Bidirectional Tickling 10年以上前か〜。テーマが面白い！\n日本語に訳すと\nくすぐり：相互くすぐりのための共有触覚インターフェース\nかな\u0026hellip;？\n解説ページ\nMasahiro FURUKAWA 先生\n仕組み 視覚 × 触覚\nてのひらにスマホを乗っける。リアル感を出すためにこのときスマホにはちょうど良いサイズでてのひらの画像を表示しておく。\n視覚ついて もともとくすぐられる仕草を見せられると、実際には触れていなくてもくすぐったく感じるらしい。。。へ〜\nそれを視覚に応用した。\nスマホを指でなぞると、その場所どおりの一位置を伝達し、２台目のスマホに指の映像が流れるというもの。\nこれ、イメージとしてはカメラが上にあって、撮影している感じに見える。でも実際にはカメラはなくて、ディスプレイのタップした位置を取得してその座標を送信して、２台目の画面に指を表示しているみたい。\n触覚について 上記の視覚と連動して、スマホの裏側に取り付けた振動子を 作動している。\nというかリンク内の動画を見るのが早い！！！ 今後はスマホ内部の振動でって言ってるけど、当時はなかったのかな〜わざわざ振動子を取り付けている。\n調べてみたら、TapticEngine（iPhoneでタップとかボタンとかおすとカチって言ってるかのような感覚になるギミック）が搭載されてるのはiPhone7からだったーーー\n参考にして（ぱくって）実装してみた。 まあ単にSwiftとAudioKitやらTapticEngineを触ってみたかっただけなんですけど\u0026hellip;\n環境  iOS14.4 Xcode 12.4 （アプデのためのMac容量解放にn年かかった\u0026hellip;） Swift5.3 iPhone8  手順  てのひらを撮影し、背景として表示。(UIViewを全画面サイズにした。) 適当な背景透過画像（今回はやもりのシルエットにした）を用意する。  をアニメーションで動かす。(UIImageView.animate)   3.に合わせて振動させる（AudioKitのSystemAudio）  感想 微妙すぎる！ ぜんぜんおもんない\u0026hellip;\nなぜに本家とここまで差が出るのか\u0026hellip;\nやっぱり今回省いた「遠隔で連動」ってのが本質的な面白さ説あるな。\nせっかく触覚に興味出てきたんだけどなぁ\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-23/","tags":["swift"],"title":"面白い論文を見つけた"},{"categories":null,"contents":"SSH鍵とはなんぞや home直下の.sshディレクトリに鍵を保存。 configもいじっておくと楽ちん。\nssh abci でログインできるようになった！！！\n登録する ターミナル 操作が基本！！ sftpコマンド ローカルで作ったコードとかファイルをget,putで移動すれば良いのか。ふむふむ。\nsftp abci で\nsftp\u0026gt;\nていうモードに。ふむふむ。\n!を頭につけたコマンドはローカル側の操作ができるのか〜\nローカルにabci用のフォルダ作ってその中で作業すっかー\nBERTを動かしたい！ 日本語版BERTはhuggingfaceのtransmormersに入っているらしいので、それを触ろう。\npip install transformers でOKなんか。\nエラーが消えません venv で仮想環境を作る. source venv/bin/activate する.\n(venv) [trial]$ cat run.sh.~~~~~ python: error while loading shared libraries: libpython3.8.so.1.0: cannot open shared object file: No such file or directory わからなみ。\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-19/","tags":["nlp"],"title":"ABCI 初挑戦"},{"categories":["programming"],"contents":"Version Xcode12.4 Swift5.3.2\nめいいっぱいUIViewを作って、そこにカメラの映像を入力する Main.storyboardでめいいっぱいのUIViewを作り、\n8行目の@IBOutlet と接続する。\nclass ViewController: UIViewController { var mySession : AVCaptureSession! var myDevice : AVCaptureDevice! var myImageOutput : AVCapturePhotoOutput! @IBOutlet weak var myView: UIView! override func viewDidLoad() { super.viewDidLoad() // セッションの作成 mySession = AVCaptureSession() // カメラデバイスの取得 if #available(iOS 10.0, *) { let discoverySession = AVCaptureDevice.DiscoverySession(deviceTypes: [AVCaptureDevice.DeviceType.builtInWideAngleCamera], mediaType: AVMediaType.video, position: .back) for device in discoverySession.devices { myDevice = device } } else { myDevice = AVCaptureDevice.default(for: .video) } myView.backgroundColor = UIColor.clear do { // バックカメラからVideoInputを取得 let videoInput = try AVCaptureDeviceInput.init(device: myDevice) // セッションに追加 mySession.addInput(videoInput) // 画像を表示するレイヤーを生成 let myVideoLayer = AVCaptureVideoPreviewLayer(session: mySession) myVideoLayer.frame = myView.bounds myVideoLayer.videoGravity = AVLayerVideoGravity.resizeAspectFill // Viewに追加 myView.layer.addSublayer(myVideoLayer) mySession.startRunning() } catch { return } } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } override var shouldAutorotate: Bool { get { return false } } } 結局使わなかったこの機能泣\u0026hellip;\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-20/","tags":["swift"],"title":"カメラを背景画像に"},{"categories":null,"contents":"文書間距離（類似度） 文書をベクトル化し、ベクトル空間上でcos類似度を計算する  分散表現の加重平均をとる cos類似度 実用的  単語の分散表現をベクトル空間にマッピングし、ベクトル空間上での単語群間の距離を計算  EMD -\u0026gt; WMD -\u0026gt; WRD WMD・・・単語単位で考える。変換するときのコストの総和が高い方が意味が離れているとする。直感的！gensimにメソッドがあるので実装が簡単。 WRD・・・単語の分散表現を超球面上に射影 論文  \u0026lt;= 発送は1つめのと似てないですか？\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-17/","tags":["nlp"],"title":"文章間距離メモ"},{"categories":null,"contents":"API Google Translate 言わずと知れたグーグル翻訳\nAPI: URLでいけた。 Pythonとかで使える。\nDeepL API: DeepL Pro\n月額630円 + 2500円/1,000,000文字かぁ\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-18/","tags":["nlp"],"title":"自動翻訳メモ"},{"categories":["framework"],"contents":"参考書籍 SPRINT How to Solve Big Problems and Test New Ideas in Just Five Days\n今日はユーザテストの日 5人\n1人1h弱でプロトタイプを体験してもらう ふむふむ\nインタビュアー以外がふせんで洗い出してく。。。？\n人手不足！ というわけでZoomを録画し、後ほど聞き返しながらふせんを整理していく戦略に\nお昼を食べたあと、\nふせんはりはり  ポジティブ ネガティブ ニュートラル インタビューの改善（今回は事後なので不要）  に色分けしてはりはりしていく\n頭すごく痛い 共通点探し（パターン発見） 5人中2,3人に共通していた点をリストアップする。\nスプリントクエスチョンと付き合わせる。\nまとめ作業 かなり手応えのあるアイデアが産めた気がする！ 今後  ユーザテストし直し プロトの洗練 プレゼン \u0026amp; フィードバック  ","permalink":"https://stardust-coder.github.io/apblog/blog/post-16/","tags":["ideathon"],"title":"SPRINT奮闘記4日目"},{"categories":["framework"],"contents":"参考書籍 SPRINT How to Solve Big Problems and Test New Ideas in Just Five Days\n反省会 SPRINT反省点  ソリューションスケッチが採用にいたるくらい具体的な粒度でないといけない ソリューションスケッチの内容をそこから考えているのでは意味がない。SPRINTのスピードでは進まない  Deciderは長期目標に即したものを選ぶ！ ただ選んでなくても、Deciderは絶対 長期目標とスプリントクエスチョン軌道修正 ストーリーボード完成 プロトタイプ制作 パワポとGIFを駆使してプロトタイプを作ることに。\nARと動画がメインであったので、AdobeXDがなかなか難しかった。\n思ったこと  4人はむり、9-16の予定が9-0に 睡眠時間４時間 意思疎通は人数が少ない方がいいが、スプリントは7人くらい欲しい  ","permalink":"https://stardust-coder.github.io/apblog/blog/post-15/","tags":["ideathon"],"title":"SPRINT奮闘記3日目"},{"categories":["math"],"contents":"情報幾何(Information Geometry)について 統計学や情報理論を（微分）幾何学的な視点で捉え直す学問.\n教科書 甘利先生の「情報幾何の新展開」を自主ゼミで通読しています。初学者がとっつきやすいような, なるべく簡潔な説明を書きたい！.\n幾何学構造をどうやって定義する？ はじめのうちは「空間に構造を入れる」とかがいまいちピンと来なかった.\n確率分布族：多様体, 点の近傍：接空間, 接空間での定規：計量（内積）, 距離を測る：ダイバージェンス, 点同士を結ぶ：接続\nnこのパラメタで定まる確率分布全体の集合（確率分布族/統計的モデル）をn次元多様体Sとして扱う.\n一般に,計量と接続を外から与えてやると, 多様体の構造が決定でき, 平坦性が定義できる.\n第１部 割と微分幾何を使わない\n凸関数-\u0026gt;座標系-\u0026gt;ダイバージェンス-\u0026gt;計量の流れ。\n距離尺度  距離尺度  よく登場するものが何種類かあるようのでまとめてみる.  L1 norm  L2 norm KL divergence JS divergence Wasserstein distance 輸送コスト最小化問題の解. 堆積した土を移し替えるイメージらしい. α-divergence: positive measure下で唯一flatでinvariant, \"α=-1でKL, α=1でdual KL, α=0でHellinger\"   （追記中）\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-13/","tags":["information geometry"],"title":"情報幾何の新展開"},{"categories":["math","lectures"],"contents":"数理情報工学特論第一とかいう今年から始まったやつ\n 「意味」とは・言語モデル  【意味】 Harrisの分散意味論 単語の「意味（価値？）」　＝　単語の分布？ 意味の合成性　ベクトルの和 （田2017）||w(st) - 1/2(w(s)+w(t))||^2  n-gram  n-gramを使うと、原文とシャッフルとモンキー列が識別できる。 自然言語では長いn-gramでも冪（順位頻度分布両対数プロットで直線）が成り立つ. ランダムはそれが簡単に消える。（モンキーは特に） →課題はシャッフル列をもっと明確に大元から峻別する 時系列解析, 感覚時系列でtheの系列とかなら明確に違いが出る 「深層学習は愛は語れない」 極値解析・ワイブル分布 強定常・弱定常・エルゴード・カオス・複雑系（定義が曖昧） 自然言語は弱定常ですらない。   Zipf則  面白いなぁ、数理民にとっては教養らしい、NLP100本ノックの第４章 マンデルブロー「情報量あたりのコストを最適化している→冪乗則が現れる」 Fermatの原理的な扱い？ ","permalink":"https://stardust-coder.github.io/apblog/blog/post-14/","tags":["NLP"],"title":"自然言語処理"},{"categories":["math"],"contents":"ネットワーク構造 データの性質を見て考える。\nなにをつかうか？全結合層、CNN、RNN・・・\nパラメータは？CNNならチャネル数、・・・\nテキストならAttention, Transformer・・・\n活性化関数は何使う？sigmoid, ReLU, tanh・・・\n目的関数 cross entropy, MSE, Triplet損失 などなどどれを使おう？\nタスクによって変わってくる。\n最適化手法  SGD（確率的勾配降下法） モメンタム Adam バッチサイズや学習率mエポック数 early stoppingの有無 アニーリング etc.  Tips  バッチ正規化 Dropout Data Augmentation L2正則化 アンサンブル学習 補助タスク etc.  大きな構造はどのタスクでも似ているなあ\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-11/","tags":["deeplearning"],"title":"ニューラルネットワークの構成要素"},{"categories":["math","lectures"],"contents":"最適化はおもしろそう。。。\n完全単模性とは 任意の小行列式が0か-1か1の行列のこと.\n別に正方行列じゃなくてもいい.\n成分は, 0か1か-1となる.\n例) 単位行列,\n$A$が完全単模なら, 転置とか, $A$と単位行列を並べてできる行列も完全単模！\n定理 $A$が完全単模行列のとき, 任意の整数ベクトル$\\boldsymbol{b}$に対して$\\{\\boldsymbol{x}:A\\boldsymbol{x} \\leq \\boldsymbol{b}\\}$が整数多面体となる.  $\\min \\boldsymbol{c}^\\mathrm{T}\\boldsymbol{x}, s.t. A \\boldsymbol{x} \\leq b$ とかは, $\\boldsymbol{b}$がintegralなら最適解もintegral. 整数の縛りを外して考えてやっても, 結局凸多面体の面（単体法で解くなら端点）に最適解が来るので, あれ？整数になってね？というノリかと\n完全双対整数性(TDI) $\\max {\\boldsymbol{c}^\\mathrm{T} \\boldsymbol{x}:A\\boldsymbol{x}\\leq b} = \\min {\\boldsymbol{b}^\\mathrm{T} \\boldsymbol{y}: A^\\mathrm{T} \\boldsymbol{y} = \\boldsymbol{c}, \\boldsymbol{y} \\geq 0}$\nという双対問題において,\n$\\boldsymbol{c}$がintegral $\\Rightarrow$ $\\boldsymbol{y}$もintegral.\nあれ, これは完全単模関係ない\u0026hellip;?\n二部グラフとの関係 グラフ$G = (V,E)$ の接続行列を$A$とする. $A$が完全単模$\\Leftrightarrow$ $G$が二部グラフ  $G = (V,E)$の最大マッチングを求める（婚活パーティ的な）問題は, 以下のように定式化できるらしい. $$maxmize \\ \\boldsymbol{1}^\\mathrm{T} \\boldsymbol{x}$$ $$s.t. A\\boldsymbol{x} \\leq \\boldsymbol{1}, \\ \\boldsymbol{x}の成分は0か1$$\n式の意味は後で書く.\nこれを解く代わりに, 線形緩和問題（最後の線形束縛をなくしちゃう！）を解いても, $G$の最大マッチングが求められるということだった. すなわち\u0026hellip;\n\u0026ldquo;主問題の整数最適解\u0026rdquo;-\u0026gt; $G$の最大マッチング\n= （このイコールが完全単模の性質）\n\u0026ldquo;主問題（緩和）の最適解\u0026rdquo; = （このイコールは双対問題の性質）\n\u0026ldquo;(緩和）の双対問題の整数最適解\u0026rdquo;-\u0026gt; 最小頂点被覆\nという関係から有名なKonigの定理が導かれる！！！\n【Konigの定理】二部グラフの最大マッチングと最小頂点被覆の大きさが一致する！  基礎数理でやりましたね、そういえば. 単模, 変換で出てこなくてじれったい\u0026hellip;\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-10/","tags":["optimization"],"title":"完全単模"},{"categories":["math"],"contents":"幾何数理の期末勉強をはじめなきゃ汗\n連結閉曲面の分類定理 連結な閉曲面は\n 穴がkこの浮き輪 射影平面をk\u0026rsquo;こくっつけたもの のどちらかと同相である！！！  同相・・・位相同型。全単射で逆写像も連続である同相写像が存在。 射影平面・・・P^2 位相空間が連結・・・開かつ閉な集合が自明なもの(空集合と全体)しか存在しない。\n弧状連結ならば連結。逆は一般には成り立たない。$\\mathbb{R}^n$上の開集合Aについては同値。 証明は、任意の点$x \\in A$からパスをひいて行ける点全体を$O$として、$O$の範囲を開球をつかってちまちま広げていく感じ。弧状連結を示したいってことは、$A=O\u0026quot;\u0008$を言う、つまりどの点にもパスで行けるよーということが言いたい.\n＜使ったこと＞\n 開球は凸集合なので中身はパスで結べる. PastingLenmaで、xと開球をパスで結べる. 開球を用いた開と閉の定義. Oが開集合かつ閉集合かつ非空 $\\Rightarrow$ O=A（全体）  ホモトピー やりたいこと：空間の間のホモトピー同値を、群の間の同型に対応させる。\nホモロジー群 $H_1(G)$ の意味・・・生成元となるサイクルの個数 以下の３つの操作を導入する.\n 辺の反転 辺の細分 点の縮約  これらの操作を施してもホモロジー群は不変.\nブーケ(bouquet)  $S^1 \\wedge S^1 \\cdots \\wedge S^1$  連結グラフとブーケはホモトピー同値（ホモロジー群も一緒） すべての頂点と接続してサイクルを含まない枝数 n − 1 の枝集合のことを，グラフの全域木という. これは可縮な部分複体になる.全域木を1点に縮約すると，全域木に含まれない m − n + 1 本の枝はループになる   ブーケのホモロジー群は、$H_0(G) = \\mathbb{Z}, H_1(G) = \\mathbb{Z}^m$, $m$は花弁の枚数  $H_0(G)$の意味・・・連結成分の個数 1次元複体$K$上に離散的ダイバージェンス、ベクトル場、ポテンシャルの存在 $\\Leftrightarrow H_0(K) \\simeq \\mathbb{Z} \\Leftrightarrow Kは連結グラフ$\nホモロジーの計算の仕方  愚直に計算する スミス標準形を用いる 完全系列を用いる  完全系列とは すべてのホモロジー群が0であるチェイン複体（アーベル群の列ろ準同型写像たちの組）\n $0 \\xrightarrow{f} A \\rightarrow B$ のとき, $f$は単射 $A \\rightarrow B \\xrightarrow{f} 0$ のとき, $f$は全射 $0 \\rightarrow A \\xrightarrow{f} B \\rightarrow 0$ のとき, $f$は全単射（つまり同型写像）  代表的な図形のホモロジー群を計算してみる n次元球体（中身あり）・・・$H_0(\\mathbb{B}^n) \\simeq \\mathbb{Z}, 他は0$１点に変形レトラクトできるので（可縮） n次元球面（中身なし）・・・$H_0(\\mathbb{S}^n) = H_n(\\mathbb{S}^n) \\simeq \\mathbb{Z}$, 他は$0$$\\mathbb{S}^n$を上半球と下半球に分解し, MV完全列を用いる. 詳細は割愛. トーラス体$V$・・・$H_k(\\mathbb{S}^1)$と同型うまく写像を定めてやると$V \\simeq \\mathbb{B^2}\\times \\mathbb{S}^1 \\simeq \\mathbb{S}^1$となるらしい... トーラス面$\\mathbb{T}^2$・・・$H_1(\\mathbb{T}^2) \\simeq \\mathbb{Z} + \\mathbb{Z}, H_0(\\mathbb{T}^2) \\simeq H_2(\\mathbb{T}^2) \\simeq \\mathbb{Z}, 他は0.$うまく写像を定めてやると$V \\simeq \\mathbb{B^2}\\times \\mathbb{S}^1 \\simeq \\mathbb{S}^1$となるらしい... ブーケ・・・$H_0(G) = \\mathbb{Z}, H_1(G) = \\mathbb{Z}^m$それは...そう... 射影平面$\\mathbb{P}^2$・・・$H_0(\\mathbb{P}^2) = \\mathbb{Z}, H_1(G) = \\frac{\\mathbb{Z}}{2\\mathbb{Z}}, 他は0$ メビウスの帯と円盤の分解に対し, MV完全列を用いる. 詳細は割愛.  自由群 定義 集合Xから生成された自由群F(X)は,\n $X \\in F(X)$ 与えられた群$G$と$f:X \\to G$に対して, $f$が準同型$\\hat{f} \\to G$ に一意に拡張される をみたす群である.  ","permalink":"https://stardust-coder.github.io/apblog/blog/post-9/","tags":["topology"],"title":"幾何数理"},{"categories":["tutorial","programming"],"contents":"休日を1日消費してアプリ作りしてみた めちゃ楽しくはないけど、そこそこ意外と楽しい。 良い趣味になるかも。\nやったこと  Flutterのインストール Flutter公式ドキュメントを読む デモアプリ（Startup namer）の作成 Udemy ×1 Udacity ×1  公式ドキュメントが丁寧だから、書いてある通りやったら何も問題がなかった。\nStartup namerアプリの概要  ドキュメントに載っている「最初に作ってみよう！」っていうやつ  Part1とPart2があってどっちもやった。 英単語辞書（english_wordsパッケージ）からランダムに２単語抽出して繋げて表示する機能 気に入った単語はお気に入り保存できる機能  簡単 Swift挫折した人でもいけるかも。最近のツールはプログラミング言語もそうだけど、用意されているものが豊富で凄い気が。（＝高レイヤーは使い方覚えるだけなので、できる人が増えてしまう）\n完璧に理解する気はないけど、簡単なアプリなら作れそう〜\nStateに触れるのはReact1回に次いで2回目だったけど、そのうち使いこなせるようになるんかなー\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-8/","tags":["App","Flutter"],"title":"はじめてのFlutter"},{"categories":["tutorial"],"contents":"はじめてのGoogle Analytics 無料で使えるアクセス解析ツール\n見れるデータ ほぼ全部。代表的なものは\n PV数：ページ表示回数 セッション数：流入〜離脱回数（30分で新セッション開始） 滞在時間：ページに滞在した平均時間  メニューバー ホーム・カスタム・リアルタイム\nユーザ・集客・行動・コンバージョン だれが・どこから来て・どのページをみて・何をしたか\nアトリビューション\nGoogle Analyticsはどうやってアクセスを解析してるの？ HTMLにJavascriptのタグが記述してある。 全ページに計測タグが必要。ないとセッションが途切れて正確な回数がカウントできなくなる。\n流入元判定 Organic Search, Paid Search, Social, Referral, etc. 公式\nGoogle Analytics用パラメータ パラメータとは、URLの末尾についている「？」が入っている文字列\nmedium（メディア） + source（参照元） + campaign（キャンペーン） + term（キーワード） + content（広告のコンテンツ）から成る。\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-6/","tags":["marketing"],"title":" GoogleAnalytics使い方メモ"},{"categories":["lectures","computer science"],"contents":"シリコン神経ネットワークとは 電子回路上でのNN\nニューロモルフィックハードウェア\n工学 + 脳科学 + 医療\nDLとの違い！！！\n 神経スパイクを用いて情報伝達。ローパスフィルタ的なところも忠実に再現。 DLは脳からinspirationはもらって進化はしてきたが、再現しているわけではない  シリコン神経ネットワークAI  脳と「互換性(compatibility)」のあるシステム -\u0026gt; 言語・記号を介さずに脳と直接コミュニケーション DLより短いラーニングプロセス, 低消費電力 壊れても勝手に治るコンピュータ（Adult Neurogenesisに対応） 進化するAI  どういった研究があるか  海馬損傷とかにたいして埋め込むデバイス 脳シミュレータ ハイブリッド  これまでのプロジェクト  SyNAPSE(IBM) BrainScaleS(ヒューマンブレインプロジェクトより出資) SpiNNaker スピナカー：商用化済 BrainBow（ボルドー第一代大ら）：医療等 MLKVTH（東大）  断崖絶壁  1940s-50s シナプスの性質 最近 fMRI, CTなどにより高次処理情報もわかるように Micro Circuitの情報処理がわからない。シナプスが再現で作れても、Micro Circuitの作り方がわからないという。。。 100%再現できるわけはないから必須のところがどこであるかが解明される必要がある \u0026lt;- 鳥のマネをして飛ぶのに、揚力だけ真似ればOKみたいな話かな\u0026hellip;?  ","permalink":"https://stardust-coder.github.io/apblog/blog/post-4/","tags":["neural science"],"title":"シリコンニューラルネットワーク"},{"categories":["lectures","computer science"],"contents":"TSP サンタさん。\nThm. 枝のコストがmetricだと、多項式時間1/2-近似アルゴリズムが存在。 どんなアルゴリズム？\n Gの最小全域木Tの枝を二重にしたグラフG\u0026rsquo;を作る G\u0026rsquo;のオイラー閉路Xを作る. TSPの解は、Xでの順番でGの全点を訪れるツアー 1/2-近似？ OPT \u0026gt;= OPTから枝を１本取り除いた全域木のコスト \u0026gt;= c(T) c(X) = 2c(T) c(C) \u0026lt;= c(X) (metric) c(C) \u0026lt;= 2OPT = 1/(1-1/2) OPT qed.  Thm. 枝のコストがmetricだと、多項式時間1/3-近似アルゴリズムが存在。 【最近！】\nTSPとTSP(D) TSPは最短ツアーを求める問題。 TSP(D)はある整数B以下のツアーがあるか決定する問題。\nTSPとTSP(D)の関係 TSPが解けたら、TSP(D)は解ける。あたりまえ。\n逆は？実は\nTSP(D)を多項式回解けば、TSPの解がもとまる。\n補題：HAMILTON PATH ∝ TSP(D) ハミルトンパス問題のグラフをGとする。 Gの枝(i,j)があるときdij=1, ないときdij=2, として隣接距離（対称）行列Dをつくる。B = n+1とする。\nTSP(D)を解いて、長さn+1以下のツアーがあると判定された -\u0026gt; パスn本で長さn+1だから、長さ2の枝は高々1本 -\u0026gt; そのツアーの中では長さ1のパスをn-1本連続で通っている。 -\u0026gt; それってハミルトンパスになっている。\n・問題の変換はO(logn)\nNP NPは全てSATに帰着できる。\nSATとは 充足判定問題: CNF論理関数が与えられたとき、それが充足可能か判定する。\nある論理関数が充足可能：【定義】ある真理値割当が存在し、論理関数が真になること。\nHAMILTONPATH ∝ SAT 完全性  C-complete:任意のL' in CがLに帰着可能 closed under reductions: L ∝ L' in C PとNPは帰着に関して閉じている。  SATはNP-complete(Cookの定理)  NPの任意の問題は非決定チューリングマシンで多項式時間で解ける。 「非決定チューリングマシンのプログラムが多項式時間p(n)で状態Yで停止」 同値 「論理関数は充足可能」 つまり、NPの任意の問題がSATに帰着可能。 つまり、SATはNP-complete  SAT ∝ HAMILTONPATH ∝ TSP(D) ∝ SAT 全てNP-complete\nBin-Packing問題 前からみてくのが2-近似アルゴリズム\n万能チューリングマシンU U(M;x)=M(x), UはMの動作をまねしてる。\nThe HALTING Problem 言語H: 全てのチューリングマシンと停止する入力を符号化した文字列の集合 Hを認識するMHの存在を仮定して背理法を目指す。 ＜対角線論法で示す＞\n","permalink":"https://stardust-coder.github.io/apblog/blog/post-5/","tags":["algorithm"],"title":"算法数理メモ"},{"categories":["Web Design","programming"],"contents":"参考にしたサイト  \u0026ldquo;Liva-HugoのGithub\u0026rdquo; \u0026ldquo;Qiita「Hugo + GitHub Pages（独自ドメイン適応）でサイトを作成・公開する」\u0026quot; \u0026ldquo;Install Hugo (Extended) Latest With Shell Script For macOS\u0026rdquo;  ","permalink":"https://stardust-coder.github.io/apblog/blog/post-1/","tags":["Hugo"],"title":"Hugoで作ったブログサイトをGithubPagesで公開"},{"categories":["lectures","computer science"],"contents":"学科長の20年前の研究らしい、興味あり！\n接尾辞木 1973年 全ての接尾辞を格納したcompacted trie\ntrie（トライ）全人類知ってるん？  語源は\u0026quot;retrieval\u0026quot; あるノードの配下の全ノードは、自身に対応する文字列に共通するプレフィックス（接頭部）があり、ルート（根）には空の文字列が対応している。 Wikipedia  compacted trieってなんですか なにがコンパクトなんだろう\n接尾辞配列（suffix array) 1993年 接尾辞のポインタを辞書順にソートした配列 検索は二分探索で行える 二分探索木の高さはO(logn)だった mは検索したい文字列の長さ、一回の比較につき長さmの文字列比較なのでO(m)かかる。 -\u0026gt; 計算量はO(mlogn)\n#!/usr/bin/perl -w use strict; my $t = \u0026#34;hogehogehogege\u0026#34;;\t# この中から my @sa = (0..length($t)-1);\t# Suffix Array初期化 ### Suffix Array の作成 @sa = sort {substr($t, $a) cmp substr($t, $b)} @sa; for (0..$#sa) { print \u0026#34;$_ $sa[$_] \u0026#34;,substr($t, $sa[$_]),\u0026#34;\\n\u0026#34;; } #ポイントは、ポインタ（数字）が辞書順にソートされている ### バイナリサーチ my $k = \u0026#34;ppi\u0026#34;; #これがいる場所を探す my ($l, $u) = (0, $#sa); while ($l \u0026lt;= $u) { my $i = int(($l + $u)/2); my $c = $k cmp substr($t, $sa[$i], length($k)); if ($c \u0026gt; 0) { $l = $i + 1; } elsif ($c \u0026lt; 0) { $u = $i - 1; } else { print qq(\u0026#34;$k\u0026#34; is found at $sa[$i]\\n); last; } } 圧縮接尾辞配列(compressed suffix array)  SA の代わりに Φ[i] = SA^-1[SA[i]+1] を格納 先頭の1文字を消しても辞書順は同じ -\u0026gt; これを生かして圧縮する -\u0026gt; すご。あたまよ。  できること lookup(i): SA[i] を返す (O(log n) 時間) inverse(i): SA-1[i] を返す (O(log n) 時間) Φ[i]: SA-1[SA[i]+1] を返す(O(1) 時間) substring(i,l): T[SA[i]..SA[i]+l-1]を返す – O(l) 時間\nしくみはむずいけど、使ってみるか リンク切れてた。。。\n \n","permalink":"https://stardust-coder.github.io/apblog/blog/post-2/","tags":["algorithm"],"title":"学科長の20年前の研究"},{"categories":["Web Design","programming"],"contents":"あけましておめでとう！ 2021年を記念にブログをつくってみました。 特に動機とかはないです。つくっただけ！ （Hugoのテンプレートに触ってみたかっただけという\u0026hellip;）\n講義で習ったこと関連のことを書くかもしれません。 内容は応用数学とかです。\nあと自分がネット上で探してもなかなかヒットしなかった情報とかを載せれたらいいかも。\nまあ、実質日記\u0026hellip;笑\n","permalink":"https://stardust-coder.github.io/apblog/blog/firstpost/","tags":["Hugo"],"title":"ブログつくりました"}]